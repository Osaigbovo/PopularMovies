apply plugin: 'com.android.application'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.osaigbovo.udacity.popularmovies"
        minSdkVersion 21
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("String", "API_KEY", '""') // 5ba7a64b2ea5c12dd9e12ded0bab8faf
            buildConfigField("String", "YOUTUBE_KEY", '""') // AIzaSyAcPnu4LocIiUAM2mOcpiGkzp6DnMRSn04
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    /*configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "com.android.support") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "27.+"
                }
            }
        }
    }*/

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // Lifecycles, LiveData, and ViewModel.
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.3.0'

    // Room
    implementation 'androidx.room:room-runtime:2.2.6'
    annotationProcessor 'androidx.room:room-compiler:2.2.6'
    implementation 'androidx.room:room-rxjava2:2.2.6'

    implementation "com.github.akarnokd:rxjava3-bridge:3.0.0"

    // Paging
    implementation "androidx.paging:paging-runtime:${versions.paging}"
    implementation "android.arch.paging:rxjava2:${versions.paging}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    //implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation "com.github.akarnokd:rxjava3-retrofit-adapter:3.0.0-RC8"

    // OkHTTP
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    implementation "com.google.code.gson:gson:${versions.gson}"

    // Dagger Core
    implementation "com.google.dagger:dagger:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${versions.dagger}"
    // Dagger Android
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${versions.dagger}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    implementation "com.github.bumptech.glide:recyclerview-integration:${versions.glide}"

    // Reactive Programming
    implementation "io.reactivex.rxjava3:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava3:rxjava:${versions.rxjava}"

    // View Injection
    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    // Youtube
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    // Lottie
    implementation "com.airbnb.android:lottie:3.4.0"

    // Flow Layout
    implementation 'com.xiaofeng.android:flowlayoutmanager:1.2.3.2'

    // Logging
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'
    // releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakcanary}"

    // Dependencies for local unit tests
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-all:${versions.mockito}"
    testImplementation "org.hamcrest:hamcrest-all:${versions.hamcrest}"
    testImplementation "org.powermock:powermock-module-junit4:${versions.powerMockito}"
    testImplementation "org.powermock:powermock-api-mockito:${versions.powerMockito}"

    // Android Testing Support Library's runner and rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Espresso UI Testing dependencies.
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'

}
repositories {
    mavenCentral()
}
